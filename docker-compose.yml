services:
    laravel:
        container_name: '${APP_NAME}'
        restart: always
        build:
            context: .
            dockerfile: Dockerfile
            args:
                user: '${APP_NAME}'
                uid: 9999
        environment:
            DB_CONNECTION: '${DB_CONNECTION}'
            DB_HOST: '${DB_CONTEINER_NAME:-pgsql}'
            DB_PORT: '${DB_PORT}'
            DB_DATABASE: '${DB_DATABASE}'
            DB_USERNAME: '${DB_USERNAME}'
            DB_PASSWORD: '${DB_PASSWORD}'
        entrypoint: [ "./docker/entrypoint.sh" ]
        ports:
            - '${APP_PORT:-80}:80'
        working_dir: /var/www
        volumes:
            - './:/var/www'
        networks:
            - backend
        depends_on:
            pgsql:
                condition: service_healthy

    pgsql:
        image: 'postgres:15'
        restart: always
        container_name: '${DB_CONTEINER_NAME:-pgsql}'
        ports:
            - '${DB_PORT:-5432}:5432'
        environment:
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'pgdata:/var/lib/postgresql/data'
        networks:
            - backend
        healthcheck:
            test:
                - CMD
                - pg_isready
                - '-q'
                - '-d'
                - '${DB_DATABASE}'
                - '-U'
                - '${DB_USERNAME}'
            retries: 3
            timeout: 5s

networks:
    backend:


volumes:
    pgdata:
