services:
    app:
        container_name: bem-server
        restart: always
        build:
            context: .
            dockerfile: Dockerfile
        environment:
            DB_CONNECTION: '${DB_CONNECTION}'
            DB_HOST: '${DB_CONTEINER_NAME:-pgsql}'
            DB_PORT: '${DB_PORT}'
            DB_DATABASE: '${DB_DATABASE}'
            DB_USERNAME: '${DB_USERNAME}'
            DB_PASSWORD: '${DB_PASSWORD}'
        ports:
            - '${APP_PORT:-9000}:9000'
        working_dir: /var/www
        volumes:
            - '.:/var/www'
        networks:
            - backend
        command: /bin/sh -c "chmod -R 777 storage bootstrap/cache && composer i && php artisan migrate && php artisan app:register-fungi-occurrences && php-fpm"
        depends_on:
            pgsql:
                condition: service_healthy

    webserver:
        image: nginx:alpine
        container_name: nginx-bem-server
        ports:
            - "80:80"
        volumes:
            - .:/var/www
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        networks:
            - backend
        depends_on:
            - app

    pgsql:
        image: 'postgres:15'
        restart: always
        container_name: '${DB_CONTEINER_NAME:-pgsql}'
        ports:
            - '${DB_PORT:-5432}:5432'
        environment:
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - './pgdata:/var/lib/postgresql/data'
        networks:
            - backend
        healthcheck:
            test:
                - CMD
                - pg_isready
                - '-q'
                - '-d'
                - '${DB_DATABASE}'
                - '-U'
                - '${DB_USERNAME}'
            retries: 3
            timeout: 5s

networks:
    backend:
        driver: bridge

volumes:
    pgdata:
